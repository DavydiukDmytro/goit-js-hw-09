{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAW/B,OAVe,IAAIC,SAAQ,CAACC,EAASC,KACnC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAtCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAEC,iBACD,MACCC,UAAUd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,IACtBJ,EAAEK,eAMT,SAAwBC,EAAOH,EAAMC,GACnC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAS,EAAGG,GAAK,EACnCrB,EAAcqB,EAAGD,GACdE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,qBAAqBvB,QAAeC,MAAU,IAE9DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOG,QAAQ,oBAAoBzB,QAAeC,MAAU,IAEhEkB,GAAgBH,C,CAdlBU,CAAeC,OAAO1B,EAAM2B,OAAQD,OAAOX,EAAKY,OAAQD,OAAOV,EAAOW,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};  \n\nrefs.form.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n   const {\n    elements: { delay, step, amount }\n   } = e.currentTarget;\n  createPromises(Number(delay.value), Number(step.value), Number(amount.value));\n  // e.currentTarget.reset();\n};\n\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 1; i < amount + 1; i += 1){\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay = delay + step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const promis = new Promise((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promis;\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","delay1","i","then","Notify","success","catch","failure","$47d4ff9957288465$var$createPromises","Number","value"],"version":3,"file":"03-promises.9bc416bc.js.map"}